{"version":3,"sources":["js/player.js","js/weapon.js","js/map.js","js/initGame.js","js/app.js"],"names":["Player","id","damages","url","Weapon","name","Map","nbLines","nbCols","nbWeapons","listWeapons","nbPlayers","listPlayers","i","j","x","y","trElt","document","createElement","querySelector","appendChild","tdElt","dataset","getElementById","children","length","$tdElts","$","min","max","randomNumber","random","index","randomTdElt","getCellInfos","addClass","nb","pos","posTd","hasClass","celluleARegarder","chartAt","charAt","window","Math","floor","Init","Grille","createGrid","createWalls","createWeapons","createPlayers","ready","InitGame"],"mappings":";;AIAA;;;;AAEA4B,CAAC,CAACV,QAAD,CAAD,CAAYmC,KAAZ,CAAkB,YAAW;AACzB,ADHJ,ADAA,MEGUC,QAAQ,GAAG,IAAIP,iBAAJ,CAAS,EAAT,EAAa,EAAb,CAAjB;AACAO,EAAAA,QAAQ,CAACL,UAAT,GAFyB,CAGzB;AACH,AFLD,CECA,GJFqBjD,ACAAI,SDCjB,ACAA,gBDAYH,ACAAA,EDAZ,ACAA,EDAgBC,ACAAG,IAAhB,EAAsBH,CDAtB,EAAyBC,GAAzB,CCAA,CDA6B,CCAEA,GAA/B,EAAoC;ADAP,ACAO;;ADChC,ACAA,ODAKF,ACAAA,EDAL,ACAA,GDAUA,ACAAA,EDAV,ACAA;ADCA,ACAA,ODAKC,ACAAG,IAAL,GDAA,ACAYA,GDAGH,CCAf,MDAA;AACA,ACAA,ODAKC,ACAAD,GDAL,ICAA,GAAeA,OAAf,MDAqBC,GAArB;AACH,ACAG,OAAKA,GAAL,oBAAqBA,GAArB;AACH;AEJL;AACAyC,MAAM,CAACZ,MAAP,GAAgB,UAAUH,GAAV,EAAeC,GAAf,EAAoB;AAClC,ADDF,SCCSe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACb,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACD,CAFD,GDCqBvB;AACnB,eAAYC,OAAZ,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,WAAxC,EAAqDC,SAArD,EAAgEC,WAAhE,EAA6E;AAAA,ICE1DmC;;ADDjB,SAAKxC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmB,CACjB,IAAIN,eAAJ,CAAW,CAAX,EAAc,SAAd,EAAyB,EAAzB,EAA6B,SAA7B,CADiB,EAEjB,IAAIA,eAAJ,CAAW,CAAX,EAAc,aAAd,EAA6B,EAA7B,EAAkC,UAAlC,CAFiB,EAGjB,IAAIA,eAAJ,CAAW,CAAX,EAAc,aAAd,EAA6B,EAA7B,EAAiC,UAAjC,CAHiB,EAIjB,IAAIA,eAAJ,CAAW,CAAX,EAAc,aAAd,EAA6B,EAA7B,EAAkC,OAAlC,CAJiB,EAKjB,IAAIA,eAAJ,CAAW,CAAX,EAAc,MAAd,EAAsB,EAAtB,EAA0B,OAA1B,CALiB,CAAnB;AAOA,SAAKO,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmB,CACjB,IAAIZ,KCVK,UDUT,CAAW,CAAX,EAAc,EAAd,EAAkB,iBAAlB,CADiB,EAEjB,IAAIA,eAAJ,CAAW,CAAX,EAAc,EAAd,EAAkB,iBAAlB,CAFiB,CAAnB;ACRA,ADaD;ACZC,UAAMgD,MAAM,GAAG,IAAI1C,YAAJ,CAAQ,EAAR,EAAY,EAAZ,CAAf;AACA0C,MAAAA,MAAM,CAACC,UAAP;AACAD,MAAAA,MAAM,CAACE,WAAP;AACAF,MAAAA,MAAM,CAACG,aAAP,ODUW;ACTXH,ADUA,MCVAA,IDUInC,CAAJ,CCVM,CAACuC,aAAP;AACD,ADUC,UAAItC,CAAJ;AACA,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,CAAC,GAAG,CAAR;;AAEA,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKN,OAArB,EAA8BM,CAAC,EAA/B,EAAmC;AACjC,YAAII,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAZ;AACAF,QAAAA,KAAK,CAAChB,EAAN,GAAW,UAAUY,CAArB;AACAK,QAAAA,QAAQ,CAACE,aAAT,CAAuB,UAAvB,EAAmCC,WAAnC,CAA+CJ,KAA/C;;AAEA,aAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKN,MAArB,EAA6BM,CAAC,EAA9B,EAAkC;AAChC,cAAMQ,KAAK,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAd;AACAG,UAAAA,KAAK,CAACrB,EAAN,GAAWc,CAAC,GAAG,GAAJ,GAAUC,CAArB;AACAM,UAAAA,KAAK,CAACC,OAAN,CAAcR,CAAd,GAAkBA,CAAlB;AACAO,UAAAA,KAAK,CAACC,OAAN,CAAcP,CAAd,GAAkBA,CAAlB,CAJgC,CAKhC;;AACAE,UAAAA,QAAQ,CAACM,cAAT,gBAAgCR,CAAhC,GAAqCK,WAArC,CAAiDC,KAAjD;AACAP,UAAAA,CAAC,GAP+B,CAO3B;AACL;;AACA,cAAIG,QAAQ,CAACM,cAAT,gBAAgCR,CAAhC,GAAqCS,QAArC,CAA8CC,MAA9C,IAAwD,KAAKlB,MAAjE,EAAyE;AACvEQ,YAAAA,CAAC;AACDD,YAAAA,CAAC,GAAG,CAAJ;AACD;AACF;AACF;AACF;;;kCAEa;AACZ,UAAMY,OAAO,GAAGC,CAAC,CAAC,IAAD,CAAjB,CADY,CAGZ;;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,GAAG,GAAG,EAAZ,CALY,CAOZ;;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACH,GAAD,EAAMC,GAAN,CAA3B;;AAEA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,YAApB,EAAkClB,CAAC,EAAnC,EAAuC;AACrC;AACA,YAAIoB,KAAK,GAAGD,MAAM,CAAC,CAAD,EAAIL,OAAO,CAACD,MAAZ,CAAlB,CAFqC,CAEG;;AACxC,YAAIQ,WAAW,GAAGP,OAAO,CAACM,KAAD,CAAzB,CAHqC,CAKrC;;AACA,eAAO,KAAKE,YAAL,CAAkBD,WAAW,CAACjC,EAA9B,MAAsC,CAA7C,EAAgD;AAC9C;AACAgC,UAAAA,KAAK,GAAGD,MAAM,CAAC,CAAD,EAAIL,OAAO,CAACD,MAAZ,CAAd;AACAQ,UAAAA,WAAW,GAAGP,OAAO,CAACM,KAAD,CAArB;AACD,SAVoC,CAYrC;;;AACAL,QAAAA,CAAC,CAACM,WAAD,CAAD,CAAeE,QAAf,CAAwB,OAAxB;AACD;AACF;;;oCAEe;AACd,UAAMT,OAAO,GAAGC,CAAC,CAAC,IAAD,CAAjB;AAEA,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAIO,EAAE,GAAG,CAAT;AAEA,UAAMN,YAAY,GAAGC,MAAM,CAACH,GAAD,EAAMC,GAAN,CAA3B;;AAEA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,YAApB,EAAkClB,CAAC,EAAnC,EAAuC;AAErC,YAAIoB,KAAK,GAAGD,MAAM,CAAC,CAAD,EAAIL,OAAO,CAACD,MAAZ,CAAlB;AACA,YAAIQ,WAAW,GAAGP,OAAO,CAACM,KAAD,CAAzB;;AAEA,eAAO,KAAKE,YAAL,CAAkBD,WAAW,CAACjC,EAA9B,MAAsC,CAA7C,EAAgD;AAC9C;AACAgC,UAAAA,KAAK,GAAGD,MAAM,CAAC,CAAD,EAAIL,OAAO,CAACD,MAAZ,CAAd;AACAQ,UAAAA,WAAW,GAAGP,OAAO,CAACM,KAAD,CAArB;AACD,SAToC,CAWrC;;;AACAL,QAAAA,CAAC,CAACM,WAAD,CAAD,CAAeE,QAAf,CAAwB,WAAWC,EAAnC;AACAA,QAAAA,EAAE;AACH;AACF;;;oCAEe;AACd,UAAMV,OAAO,GAAGC,CAAC,CAAC,IAAD,CAAjB;AAEA,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA,UAAIO,EAAE,GAAG,CAAT;AAEA,UAAMN,YAAY,GAAGC,MAAM,CAACH,GAAD,EAAMC,GAAN,CAA3B;;AAEA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,YAApB,EAAkClB,CAAC,EAAnC,EAAuC;AAErC,YAAIoB,KAAK,GAAGD,MAAM,CAAC,CAAD,EAAIL,OAAO,CAACD,MAAZ,CAAlB;AACA,YAAIQ,WAAW,GAAGP,OAAO,CAACM,KAAD,CAAzB;;AAEA,eAAO,KAAKE,YAAL,CAAkBD,WAAW,CAACjC,EAA9B,MAAsC,CAA7C,EAAgD;AAC9C;AACAgC,UAAAA,KAAK,GAAGD,MAAM,CAAC,CAAD,EAAIL,OAAO,CAACD,MAAZ,CAAd;AACAQ,UAAAA,WAAW,GAAGP,OAAO,CAACM,KAAD,CAArB;AACD,SAToC,CAWrC;;;AACAL,QAAAA,CAAC,CAACM,WAAD,CAAD,CAAeE,QAAf,CAAwB,WAAWC,EAAnC;AACAA,QAAAA,EAAE;AACH;AACF,MAGD;AACA;AACA;;;;iCAEaC,KAAK;AAChB;AACA;AACA,UAAIC,KAAK,GAAGX,CAAC,YAAKU,GAAL,EAAb;AACA,UAAIV,CAAC,CAACW,KAAD,CAAD,CAASC,QAAT,CAAkB,OAAlB,CAAJ,EAAgC,OAAO,CAAP;AAChC,UAAIZ,CAAC,CAACW,KAAD,CAAD,CAASC,QAAT,CAAkB,SAAlB,CAAJ,EAAkC,OAAO,CAAP;AAClC,UAAIZ,CAAC,CAACW,KAAD,CAAD,CAASC,QAAT,CAAkB,SAAlB,CAAJ,EAAkC,OAAO,CAAP;AAClC,UAAIZ,CAAC,CAACW,KAAD,CAAD,CAASC,QAAT,CAAkB,SAAlB,CAAJ,EAAkC,OAAO,CAAP;AAClC,UAAIZ,CAAC,CAACW,KAAD,CAAD,CAASC,QAAT,CAAkB,SAAlB,CAAJ,EAAkC,OAAO,CAAP;AAClC,UAAIZ,CAAC,CAACW,KAAD,CAAD,CAASC,QAAT,CAAkB,SAAlB,CAAJ,EAAkC,OAAO,CAAP,CAAlC,KACK,OAAO,CAAP;AACN;;;mCAEcF,KAA2B;AAAA,UAAtBG,gBAAsB,uEAAH,CAAG;AACxC;AACA,UAAM1B,CAAC,GAAGuB,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAAV;AACA,UAAM1B,CAAC,GAAGsB,GAAG,CAACK,MAAJ,CAAWL,GAAG,CAACK,MAAJ,CAAWjB,MAAX,GAAoB,CAA/B,CAAV;AACD","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["export default class Player {\r\n    constructor(id, damages, url){\r\n        this.id = id;\r\n        this.damages = damages;\r\n        this.url = `../img/${url}.png`;\r\n    }\r\n}","export default class Weapon {\r\n    constructor(id, name, damages, url) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.damages = damages;\r\n        this.url = `../img/${url}.png`;\r\n    }\r\n}","import Player from './player.js';\r\nimport Weapon from './weapon.js';\r\n\r\n// class Map : génération des obstacles, import des joueurs et des armes\r\nexport default class Map {\r\n  constructor(nbLines, nbCols, nbWeapons, listWeapons, nbPlayers, listPlayers) {\r\n    this.nbLines = nbLines;\r\n    this.nbCols = nbCols;\r\n    this.nbWeapons = nbWeapons;\r\n    this.listWeapons = [\r\n      new Weapon(0, 'Default', 10, 'default'),\r\n      new Weapon(1, 'Cage Eclair', 20,  'electrik'),\r\n      new Weapon(2, 'Double Pied', 30, 'fighting'),\r\n      new Weapon(3, 'Noeud herbe', 40,  'plant'),\r\n      new Weapon(4, 'Surf', 50, 'water'),\r\n  ];\r\n    this.nbPlayers = nbPlayers;\r\n    this.listPlayers = [\r\n      new Player(0, 10, 'img/player1.png'),\r\n      new Player(1, 10, 'img/player2.png')\r\n  ]\r\n\r\n  }\r\n  createGrid() {\r\n    let i;\r\n    let j;\r\n    let x = 0;\r\n    let y = 0;\r\n\r\n    for (i = 0; i < this.nbLines; i++) {\r\n      let trElt = document.createElement('tr');\r\n      trElt.id = 'line-' + i;\r\n      document.querySelector('#plateau').appendChild(trElt);\r\n\r\n      for (j = 0; j < this.nbCols; j++) {\r\n        const tdElt = document.createElement('td');\r\n        tdElt.id = x + '-' + y;\r\n        tdElt.dataset.x = x;\r\n        tdElt.dataset.y = y;\r\n        //tdElt.innerHTML = `${i} - ${j}`; // data attribute\r\n        document.getElementById(`line-${y}`).appendChild(tdElt);\r\n        x++; // aller à droite\r\n        // passer à la ligne\r\n        if (document.getElementById(`line-${y}`).children.length == this.nbCols) {\r\n          y++;\r\n          x = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createWalls() {\r\n    const $tdElts = $('td');\r\n\r\n    // le nb de mur va être dans cet interval\r\n    const min = 10;\r\n    const max = 15;\r\n\r\n    // generation d'un nb aléatoire (voir la fonction dans initGame.js)\r\n    const randomNumber = random(min, max);\r\n\r\n    for (let i = 0; i < randomNumber; i++) {\r\n      // sélectionne un td au hasard\r\n      let index = random(0, $tdElts.length);  //index = 0 à 99 taille de la grille\r\n      let randomTdElt = $tdElts[index];\r\n\r\n      // fais les vérifications pour qu'un mur n'apparaisse pas sur un autre\r\n      while (this.getCellInfos(randomTdElt.id) !== 0) {\r\n        //3-1\r\n        index = random(0, $tdElts.length);\r\n        randomTdElt = $tdElts[index];\r\n      }\r\n\r\n      // on donne la class walls et les roches\r\n      $(randomTdElt).addClass('walls');\r\n    }\r\n  }\r\n\r\n  createWeapons() {\r\n    const $tdElts = $('td');\r\n\r\n    const min = 4;\r\n    const max = 4;\r\n    let nb = 1;\r\n\r\n    const randomNumber = random(min, max);\r\n\r\n    for (let i = 0; i < randomNumber; i++) {\r\n      \r\n      let index = random(0, $tdElts.length);\r\n      let randomTdElt = $tdElts[index];\r\n\r\n      while (this.getCellInfos(randomTdElt.id) !== 0) {\r\n        //3-1\r\n        index = random(0, $tdElts.length);\r\n        randomTdElt = $tdElts[index];\r\n      }\r\n\r\n      // on donne la class walls et les roches\r\n      $(randomTdElt).addClass('weapon' + nb);\r\n      nb++;\r\n    }\r\n  }\r\n\r\n  createPlayers() {\r\n    const $tdElts = $('td');\r\n\r\n    const min = 2;\r\n    const max = 2;\r\n    let nb = 1;\r\n\r\n    const randomNumber = random(min, max);\r\n\r\n    for (let i = 0; i < randomNumber; i++) {\r\n      \r\n      let index = random(0, $tdElts.length);\r\n      let randomTdElt = $tdElts[index];\r\n\r\n      while (this.getCellInfos(randomTdElt.id) !== 0) {\r\n        //3-1\r\n        index = random(0, $tdElts.length);\r\n        randomTdElt = $tdElts[index];\r\n      }\r\n\r\n      // on donne la class walls et les roches\r\n      $(randomTdElt).addClass('player' + nb);\r\n      nb++;\r\n    }\r\n  }\r\n  \r\n\r\n  // renvoi ce qu'il y a sur la cellule visée\r\n  // parametre pos une position sous la forme {3-1}\r\n  // returne un nombre correspondant à la classe associée ou 0 si rien ne correspond\r\n  \r\n  getCellInfos(pos) {\r\n    // la pos ressemble à 3-1 par exemple\r\n    // on la sélectionne avec jquery\r\n    let posTd = $(`#${pos}`);\r\n    if ($(posTd).hasClass('walls')) return 1;\r\n    if ($(posTd).hasClass('weapon1')) return 1;\r\n    if ($(posTd).hasClass('weapon2')) return 1;\r\n    if ($(posTd).hasClass('weapon3')) return 1;\r\n    if ($(posTd).hasClass('weapon4')) return 1;\r\n    if ($(posTd).hasClass('player1')) return 1;\r\n    else return 0;\r\n  }\r\n\r\n  regarderAutour(pos, celluleARegarder = 1) {\r\n    // pos est sous la forme 3-1\r\n    const x = pos.chartAt(0);\r\n    const y = pos.charAt(pos.charAt.length - 1);\r\n  }\r\n}","import Map from './map.js';\r\n\r\n// window : appel global\r\nwindow.random = function (min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nexport default class Init {\r\n  createGrid() {\r\n    // tous les objets\r\n    const Grille = new Map(10, 10);\r\n    Grille.createGrid();\r\n    Grille.createWalls();\r\n    Grille.createWeapons();\r\n    Grille.createPlayers();\r\n  }\r\n}\r\n","import Init from \"./initGame.js\"\r\n\r\n$(document).ready(function() {\r\n    const InitGame = new Init(10, 10)\r\n    InitGame.createGrid()\r\n    // initgame.createplayer\r\n});\r\n"]}