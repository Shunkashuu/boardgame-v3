{"version":3,"sources":["js/player.js","js/map.js","js/initGame.js","js/app.js"],"names":["Joueur","id","degats","x","y","src","Toto","console","log","Map","nbLignes","nbColonnes","i","j","trElt","document","createElement","querySelector","appendChild","tdElt","dataset","innerHTML","getElementById","children","length","$tdElts","$","min","max","randomNumber","random","index","randomTdElt","getCellInfos","addClass","pos","posTd","hasClass","cell","window","Math","floor","Init","Grille","creerGrille","genererMurs","ready","InitGame"],"mappings":"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","file":"app.c3f9f951.js","sourceRoot":"..","sourcesContent":["export default class Joueur {\r\n    constructor(id, degats, x, y, src){\r\n        this.id = id;\r\n        this.degats = degats;\r\n        this.x = x ;\r\n        this.y = y;\r\n        this.src = src;\r\n        \r\n    }\r\n}\r\n\r\n//export default Joueur\r\nconst Toto = () => {  // fonction flechee\r\n    console.log(\"depuis ma super fonction\");\r\n}\r\n\r\nexport {Toto}  //export nomme","import Joueur from './player.js';\r\n\r\n// exercice vidéo\r\nexport default class Map {\r\n  constructor(nbLignes, nbColonnes) {\r\n    this.nbLignes = nbLignes;\r\n    this.nbColonnes = nbColonnes;\r\n  }\r\n  creerGrille() {\r\n    let i;\r\n    let j;\r\n    let x = 0;\r\n    let y = 0;\r\n\r\n    for (i = 0; i < this.nbLignes; i++) {\r\n      let trElt = document.createElement('tr');\r\n      trElt.id = 'line-' + i;\r\n      document.querySelector('#plateau').appendChild(trElt);\r\n\r\n      for (j = 0; j < this.nbColonnes; j++) {\r\n        const tdElt = document.createElement('td');\r\n        tdElt.id = x + '-' + y;\r\n        tdElt.dataset.x = x;\r\n        tdElt.dataset.y = y;\r\n        tdElt.innerHTML = `${i} - ${j}`; // data attribute\r\n        document.getElementById(`line-${y}`).appendChild(tdElt);\r\n        x++; // aller à droite\r\n        // passer à la ligne\r\n        if (document.getElementById(`line-${y}`).children.length == this.nbColonnes) {\r\n          y++;\r\n          x = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @Description Génère les murs\r\n   * @author snouzy\r\n   * @date 2020-08-08\r\n   */\r\n  genererMurs() {\r\n    const $tdElts = $('td');\r\n\r\n    // le nb de mur va être dans cet interval\r\n    const min = 10;\r\n    const max = 15;\r\n\r\n    // generation d'un nb aléatoire (voir la fonction dans initGame.js)\r\n    const randomNumber = random(min, max);\r\n\r\n    for (let i = 0; i < randomNumber; i++) {\r\n      // sélectionne un td au hasard\r\n      let index = random(0, $tdElts.length);\r\n      let randomTdElt = $tdElts[index];\r\n\r\n      // fais les vérifications pour qu'un mur n'apparaisse pas sur un autre\r\n      while (this.getCellInfos(randomTdElt.id) !== 0) {\r\n        index = random(0, $tdElts.length);\r\n        randomTdElt = $tdElts[index];\r\n      }\r\n\r\n      // on colorie les murs en gris\r\n      // tu peux renommer la classe en \"mur\" si ça t'aide\r\n      $(randomTdElt).addClass('greyed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @Description Renvoi ce qu'il y a sur la cellule visée\r\n   * @author snouzy\r\n   * @date 2020-08-08\r\n   * @param {any} pos  une position sous la forme {3-1}\r\n   * @returns {int}    un nombre correspondant à la classe associée ou 0 si rien ne correspond\r\n   */\r\n  getCellInfos(pos) {\r\n    // la pos ressemble à 3-1 par exemple\r\n    // on la sélectionne avec jquery\r\n    let posTd = $(`#${pos}`);\r\n    if ($(posTd).hasClass('greyed')) return 1;\r\n    else return 0;\r\n  }\r\n}\r\n\r\nconst cell = $('td[data-x=\"5\"] td[data-y=\"7\"]');\r\nconsole.log(cell);\r\n\r\n// $(\"tr:eq(\" + x + \") td:eq(\" + y + \")\").addClass('PlayerOne')\r\n// eq selection table jquery\r\n// utile pour generer les obstacles\r\n// si cette classe n'a pas la classe player a la classe bloqued classe generique pour soit un player soit un obstacle\r\n\r\n// a faire :\r\n// generation aleatoire des cases\r\n// generation des objets\r\n","import Map from './map.js';\r\n\r\n/**\r\n * @Description Renvoi un nombre aléatoire entre {min} et {max}\r\n * window permet de dire que cette fonction est appellable de manière globale dans tout le projet\r\n * tu vas surement en avoir besoin pour génerer les armes et les joueurs aussi\r\n * @author snouzy\r\n * @date 2020-08-08\r\n * @param {int} min  le nombre minimum souhaité\r\n * @param {int} max  le nombre maximum souhaité\r\n * @returns {int}    un nombre entre min et max\r\n */\r\nwindow.random = function (min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\nexport default class Init {\r\n  creerGrille() {\r\n    // tous les objets\r\n    const Grille = new Map(10, 10);\r\n    Grille.creerGrille();\r\n    Grille.genererMurs(); //generation des murs\r\n  }\r\n}\r\n","import Init from \"./initGame.js\"\r\n\r\n$( document ).ready(function() {\r\n    const InitGame = new Init(10, 10)\r\n    InitGame.creerGrille()\r\n    // initgame.createplayer\r\n});\r\n"]}